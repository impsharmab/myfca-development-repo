package com.imperialm.imiservices.dao;

import java.util.List;
import com.imperialm.imiservices.dto.SIRewardsDetailsGraphDTO;


public interface SIRewardsDetailsGraphDAO {
	
	public static String SELECT_BY_PARENT_TERRITORY_AND_TOGGLE = "SELECT [Parent] 'parentTerritory', [Child] 'childTerritory', [Toggle] 'toggle', [AvgSurveyScore] 'avgSurveyScore', [ProjectedEarnings] 'projectedEarnings', [BCDlearRankEarnings] bCDlearRankEarnings, [IncentiveQualified] 'incentiveQualified' ,[TrainingQualified] 'trainingQualified' ,[EligibleSurveys] 'eligibleSurveys' ,[TotalSurveys] 'totalSurveys', [AdvsiorsQualified] 'advsiorsQualified', [ManagersQualified] 'managersQualified' FROM [SIRewardsDetailsGraph] where [Parent] = ?0 AND [Toggle] = ?1";
	public static String SELECT_SUM_BY_PARENT_TERRITORY_AND_TOGGLE = "SELECT [Parent] 'parentTerritory', '' 'childTerritory', '' 'toggle', SUM([AvgSurveyScore]) 'avgSurveyScore', SUM([ProjectedEarnings]) 'projectedEarnings', 0 bCDlearRankEarnings, SUM([IncentiveQualified]) 'incentiveQualified' , SUM([TrainingQualified]) 'trainingQualified' , SUM([EligibleSurveys]) 'eligibleSurveys' , SUM([TotalSurveys]) 'totalSurveys', SUM([AdvsiorsQualified]) 'advsiorsQualified', SUM([ManagersQualified]) 'managersQualified' FROM [SIRewardsDetailsGraph] where [Parent] = ?0 AND [Toggle] = ?1 group by parent";
	public static String SELECT_BY_PARENT_TERRITORY_LIST_AND_TOGGLE = "SELECT [Parent] 'parentTerritory', [Child] 'childTerritory', [Toggle] 'toggle', [AvgSurveyScore] 'avgSurveyScore', [ProjectedEarnings] 'projectedEarnings', [BCDlearRankEarnings] bCDlearRankEarnings, [IncentiveQualified] 'incentiveQualified' ,[TrainingQualified] 'trainingQualified' ,[EligibleSurveys] 'eligibleSurveys' ,[TotalSurveys] 'totalSurveys', [AdvsiorsQualified] 'advsiorsQualified', [ManagersQualified] 'managersQualified' FROM [SIRewardsDetailsGraph] where [Parent] IN (?0) AND [Toggle] = ?1";
	public static String SELECT_BY_CHILD_TERRITORY_LIST_AND_TOGGLE = "SELECT [Parent] 'parentTerritory', [Child] 'childTerritory', [Toggle] 'toggle', [AvgSurveyScore] 'avgSurveyScore', [ProjectedEarnings] 'projectedEarnings', [BCDlearRankEarnings] bCDlearRankEarnings, [IncentiveQualified] 'incentiveQualified' ,[TrainingQualified] 'trainingQualified' ,[EligibleSurveys] 'eligibleSurveys' ,[TotalSurveys] 'totalSurveys', [AdvsiorsQualified] 'advsiorsQualified', [ManagersQualified] 'managersQualified' FROM [SIRewardsDetailsGraph] where [Child] IN (?0) AND [Toggle] = ?1";
	public static String SELECT_BY_CHILD_TERRITORY_LIST_AND_TOGGLE_SINGLE = "SELECT [Parent] 'parentTerritory', [Child] 'childTerritory', [Toggle] 'toggle', [AvgSurveyScore] 'avgSurveyScore', [ProjectedEarnings] 'projectedEarnings', [BCDlearRankEarnings] bCDlearRankEarnings, [IncentiveQualified] 'incentiveQualified' ,[TrainingQualified] 'trainingQualified' ,[EligibleSurveys] 'eligibleSurveys' ,[TotalSurveys] 'totalSurveys', [AdvsiorsQualified] 'advsiorsQualified', [ManagersQualified] 'managersQualified' FROM [SIRewardsDetailsGraph] where [Child] = ?0 AND [Toggle] = ?1";
	public static String SELECT_BY_PARENT_TERRITORY_LIST_AND_TOGGLE_DISTICT_PARENT = "SELECT [Parent] 'parentTerritory', '' as 'childTerritory', '' as 'toggle', SUM([AvgSurveyScore]) 'avgSurveyScore', SUM([ProjectedEarnings]) 'projectedEarnings', SUM([BCDlearRankEarnings]) 'bCDlearRankEarnings', SUM([IncentiveQualified]) 'incentiveQualified' , SUM([TrainingQualified]) 'trainingQualified' , SUM([EligibleSurveys]) 'eligibleSurveys' , SUM([TotalSurveys]) 'totalSurveys', SUM([AdvsiorsQualified]) 'advsiorsQualified', SUM([ManagersQualified]) 'managersQualified' FROM [SIRewardsDetailsGraph] where [Parent] IN (?0) AND [Toggle] = ?1 GROUP BY [Parent]";
	public List<SIRewardsDetailsGraphDTO> getSIRewardsDetailsGraphByTerritoryAndToggle(String territory, String toggle);
	public List<SIRewardsDetailsGraphDTO> getSIRewardsDetailsGraphSUMByTerritoryAndToggle(String territory, String toggle);
	public List<SIRewardsDetailsGraphDTO> getSIRewardsDetailsGraphByTerritoryAndToggle(List<String> territory, String toggle);
	public List<SIRewardsDetailsGraphDTO> getSIRewardsDetailsGraphByChildTerritoryAndToggle(List<String> territory, String toggle);
	public List<SIRewardsDetailsGraphDTO> getSIRewardsDetailsGraphByChildTerritoryAndToggle(String territory, String toggle);
	public List<SIRewardsDetailsGraphDTO> getSIRewardsDetailsGraphByTerritoryAndToggleFilterParent(List<String> territory, String toggle);
}
