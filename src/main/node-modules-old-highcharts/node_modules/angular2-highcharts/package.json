{
  "_args": [
    [
      {
        "raw": "angular2-highcharts@^0.4.1",
        "scope": null,
        "escapedName": "angular2-highcharts",
        "name": "angular2-highcharts",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "C:\\Users\\sharmab\\Desktop\\Bijay\\dashboard\\work\\myfca-development-repo\\src\\main\\webapp"
    ]
  ],
  "_from": "angular2-highcharts@>=0.4.1 <0.5.0",
  "_id": "angular2-highcharts@0.4.3",
  "_inCache": true,
  "_location": "/angular2-highcharts",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/angular2-highcharts-0.4.3.tgz_1486022037601_0.8815440165344626"
  },
  "_npmUser": {
    "name": "gevgeny",
    "email": "e.gluhotorenko@gmail.com"
  },
  "_npmVersion": "3.10.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular2-highcharts@^0.4.1",
    "scope": null,
    "escapedName": "angular2-highcharts",
    "name": "angular2-highcharts",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular2-highcharts/-/angular2-highcharts-0.4.3.tgz",
  "_shasum": "83812292813bbf1d9f4be4bff54a2706610ef61b",
  "_shrinkwrap": null,
  "_spec": "angular2-highcharts@^0.4.1",
  "_where": "C:\\Users\\sharmab\\Desktop\\Bijay\\dashboard\\work\\myfca-development-repo\\src\\main\\webapp",
  "author": {
    "name": "Eugene Gluhotorenko"
  },
  "bugs": {
    "url": "https://github.com/gevgeny/angular2-highcharts/issues"
  },
  "dependencies": {
    "@types/highcharts": "^4.2.36",
    "highcharts": "^5.0.2"
  },
  "description": "Highcharts for your Angular2 project",
  "devDependencies": {
    "@angular/common": "^2.1.1",
    "@angular/compiler": "^2.1.1",
    "@angular/compiler-cli": "^2.1.1",
    "@angular/core": "^2.1.1",
    "@angular/http": "^2.1.1",
    "@angular/platform-browser": "^2.1.1",
    "@angular/platform-browser-dynamic": "^2.1.1",
    "@angular/platform-server": "^2.1.1",
    "@types/es6-shim": "^0.31.32",
    "@types/jasmine": "^2.2.34",
    "core-js": "^2.4.1",
    "http-server": "^0.9.0",
    "jasmine-core": "~2.5.2",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-jasmine": "^1.0.2",
    "reflect-metadata": "^0.1.8",
    "rxjs": "5.0.0-beta.12",
    "systemjs": "0.19.39",
    "typescript": "^2.0.3",
    "zone.js": "^0.6.25"
  },
  "directories": {},
  "dist": {
    "shasum": "83812292813bbf1d9f4be4bff54a2706610ef61b",
    "tarball": "https://registry.npmjs.org/angular2-highcharts/-/angular2-highcharts-0.4.3.tgz"
  },
  "gitHead": "bb4d9b0a5ac4e6ccbe384b858c59f5c1224b5c00",
  "homepage": "https://github.com/gevgeny/angular2-highcharts#readme",
  "keywords": [
    "Angular2",
    "ng2",
    "charts",
    "highcharts",
    "highstock",
    "highmaps"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "gevgeny",
      "email": "e.gluhotorenko@gmail.com"
    }
  ],
  "name": "angular2-highcharts",
  "optionalDependencies": {},
  "readme": "# angular2-highcharts\n\n> Angular2 charting components based on Highcharts. [Live Demo](http://plnkr.co/edit/pnkc8Iw9cSrCYn9zr0VZ?p=preview)\n\n\n[![build](https://travis-ci.org/gevgeny/angular2-highcharts.svg?branch=master)](https://travis-ci.org/gevgeny/angular2-highcharts)\n[![npm version](https://badge.fury.io/js/angular2-highcharts.svg)](https://badge.fury.io/js/angular2-highcharts)\n[![npm dependencies](https://david-dm.org/gevgeny/angular2-highcharts.svg)](https://david-dm.org/gevgeny/angular2-highcharts)\n[![npm downloads](https://img.shields.io/npm/dm/angular2-highcharts.svg)](https://www.npmjs.com/package/angular2-highcharts)\n\n## Table of Contents\n - [Installation](#installation)\n - [Usage](#usage)\n  - [Basic Usage](#basic-usage)\n    - [Setup App Module](#setup-app-module)\n    - [Create First Chart Component](#create-first-chart-component)\n  - [Handling Events](#handling-events)\n    - [Chart Events](#chart-events)\n    - [Series Events](#series-events)\n    - [Point Events](#point-events)\n    - [Axis Events](#axis-events)\n  - [Dynamic Interaction with Chart Object](#dynamic-interaction-with-chart-object)\n  - [Access to the Highcharts Static Members and Modules](#access-to-the-highcharts-static-members-and-modules)\n  - [Highstock and Highmaps](#highstock-and-highmaps)\n -  [More Examples](#more-examples) \n - [FAQ](#faq)\n - [License](#license)\n\n## Installation\n```\nnpm install angular2-highcharts --save\n```\nThe full installation process depends on environment you are using to run your angular2 app. Here are some examples:\n- [angular2-webpack-starter (Webpack)](https://github.com/gevgeny/angular2-webpack-starter-and-angular2-highcharts)\n- [angular/quickstart (SystemJS)](https://github.com/gevgeny/angular2-quickstart-and-angular2-highcharts)\n\n\n## Usage\n\n### Basic Usage\n#### Setup App Module\n```TypeScript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ChartModule } from 'angular2-highcharts';\nimport { App } from './App';\n\n@NgModule({\n    imports: [BrowserModule, ChartModule],\n    declarations: [App],\n    bootstrap: [App]\n})\nexport class AppModule {}\n```\n\n#### Create First Chart Component\nMain charts functionality provided by the `chart` component and its `options` property.\n\n```TypeScript\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'simple-chart-example',\n    template: `\n        <chart [options]=\"options\"></chart>\n    `\n})\nexport class App {\n    constructor() {\n        this.options = {\n            title : { text : 'simple chart' },\n            series: [{\n                data: [29.9, 71.5, 106.4, 129.2],\n            }]\n        };\n    }\n    options: Object;\n}\n```\n[Live Demo](http://plnkr.co/edit/IuwjpPB1YQW1T7i4B8SZ?p=preview)\n\n### Handling Events\nHighcharts itself provides bunch of events, and you still can use them with angular2-higcharts via the `options` property of the `chart` component. But it is not an angular2 way to handle events like this. So that angular2-higcharts provides `EventEmitter<ChartEvent>` wrappers for highcharts events. `ChartEvent` is an angular2-higcharts class which simply wraps original Highcharts events (`chartEvent.originalEvent`) and adds event handler context (`chartEvent.context`) since it differs depending on events.\n\n#### Chart Events \n\nAll the events from the [options.chart.events](http://api.highcharts.com/highcharts#chart.events) are available as output properties of the `chart` component.\n\n```HTML\n<chart [options]=\"options\" (selection)=\"onChartSelection($event)\"> </chart>\n```\n```TypeScript\nonChartSelection (e) {\n  this.from = e.originalEvent.xAxis[0].min.toFixed(2);\n  this.to = e.originalEvent.xAxis[0].max.toFixed(2);\n}\n```\n[Live Demo](http://plnkr.co/edit/vdgKVJOymMYhiyqZrPma?p=preview)\n#### Series Events \n\nTo use series events the same way you need to add the `series` component as a child of your chart. The only purpose of this auxiliary component is to provide access to [options.plotOptions.series.events](http://api.highcharts.com/highcharts#plotOptions.series.events) API\n\n```HTML\n<chart [options]=\"options\">\n    <series (mouseOver)=\"onSeriesMouseOver($event)\">\n    </series>\n</chart>\n<p><b>{{serieName}}</b> is hovered<p>\n```\n```TypeScript\nonSeriesMouseOver (e) {\n  this.serieName = e.context.name;\n}\n```\n[Live Demo](http://plnkr.co/edit/GkaJlk2UJjbTwsPyGXGC?p=preview)\n#### Point Events \n\nSimilary you can use the `point` to access to [options.plotOptions.series.point.events](http://api.highcharts.com/highcharts#plotOptions.series.point.events) API.\n```HTML\n<chart [options]=\"options\">\n    <series>\n        <point (select)=\"onPointSelect($event)\"></point>\n    </series>\n</chart>\n<p><b>{{point}}</b> is selected<p>\n```\n[Live Demo](http://plnkr.co/edit/TpKoJ60n4vyIDWxHNUkg?p=preview)\n#### Axis Events \n\nSimilary you can use the `xAxis` or `yAxes` to access to [options.xAxis.events](http://api.highcharts.com/highcharts#xAxis.events) or [options.yAxis.events](http://api.highcharts.com/highcharts#yAxis.events) API.\n```HTML\n<chart [options]=\"options\">\n     <xAxis (afterSetExtremes)=\"onAfterSetExtremesX($event)\"></xAxis>\n     <yAxis (afterSetExtremes)=\"onAfterSetExtremesY($event)\"></yAxis>\n</chart>\n<p>{{minX}} - {{maxX}}<p>\n<p>{{minY}} - {{maxY}}<p>\n```\n```TypeScript\nonAfterSetExtremesX (e) {\n  this.minX = e.context.min;\n  this.maxX = e.context.max;\n}\nonAfterSetExtremesY (e) {\n  this.minY = e.context.min;\n  this.maxY = e.context.max;\n}\n```\n[Live Demo](http://plnkr.co/edit/c4ojcIRVOOwq7xmk9kfx?p=preview)\n### Dynamic Interaction with Chart Object\n\nangular2-higcharts provides possibility to interact with native `HighchartsChartObject` chart object.\n\n```TypeScript \n@Component({\n    selector: 'my-app',\n    directives: [CHART_DIRECTIVES],\n    template: `\n      <chart [options]=\"options\" \n             (load)=\"saveInstance($event.context)\">\n      </chart>\n    `\n})\nclass AppComponent {\n    constructor() {\n        this.options = {\n          chart: { type: 'spline' },\n          title: { text : 'dynamic data example'}\n          series: [{ data: [2,3,5,8,13] }]\n        };\n        setInterval(() => this.chart.series[0].addPoint(Math.random() * 10), 1000);\n    }\n    chart : Object;\n    options: Object;\n    saveInstance(chartInstance) {\n        this.chart = chartInstance;\n    }\n}\n```\n[Live Demo](http://plnkr.co/edit/OQSFSKisIIWAH0megy4d?p=preview)\n### Access to the Highcharts Static Members and Modules\n\nThe Highchart modules are not really ES6 compatiable so access to highcharts native API depends on environment configuration \nSee the SystemJS and Webpack examples apps \n- https://github.com/gevgeny/angular2-webpack-starter-and-angular2-highcharts/blob/master/src/app/home/home.component.ts\n- https://github.com/gevgeny/angular2-quickstart-and-angular2-highcharts/blob/master/app/app.component.ts\n\n### Highstock and Highmaps\nThe `type` property allows you to specify chart type. Possible values are:\n* `Chart` (Default value)\n* `StockChart`\n* `Map` (To use this type you need to load the 'highcharts/modules/map' module additionally. [Live Demo](http://plnkr.co/edit/AmDfKwhRhshFn3CPprkk?p=preview))\n\n```TypeScript\n@Component({\n    selector: 'stock-chart-example',\n    directives: [CHART_DIRECTIVES],\n    template: `<chart type=\"StockChart\" [options]=\"options\"></chart>`\n})\nexport class StockChartExample {\n    constructor(jsonp : Jsonp) {\n        jsonp.request('https://www.highcharts.com/samples/data/jsonp.php?filename=aapl-c.json&callback=JSONP_CALLBACK').subscribe(res => {\n            this.options = {\n                title : { text : 'AAPL Stock Price' },\n                series : [{\n                    name : 'AAPL',\n                    data : res.json(),\n                    tooltip: {\n                        valueDecimals: 2\n                    }\n                }]\n            };\n        });\n    }\n    options: Object;\n}\n```\n[Live Demo](http://plnkr.co/edit/2xSewTZ9b213vA0ALmFq?p=preview)\n\n##More Examples\n\nHere are some common charts examples with Webpack integration https://github.com/gevgeny/angular2-highcharts/tree/master/examples\n\n##FAQ\n\n#### Why don't my series, title, axes and etc redraw after I update initial options ?\n\nBecause `angular-highcharts` is just a thin wrapper of the [Highcharts](http:/ /www.highcharts.com/) library and doesn't bind to initial options. I understand that you expect more angular-way behaviour like data binding with appropriate redrawing. But it is barely possible to implement it without redundant complications and performance decrease because almost all options can be dynamic. So my idea was to avoid any additional logic more than just a sugar (like events for series and options). In the other hand Highcharts has great [API](http://api.highcharts.com/highcharts#Chart) for dynamic manipulations with chart and `angular-highcharts` [provides you access](#dynamic-interaction-with-chart-object) to the original chart object.\n\n## License\nMIT @ Eugene Gluhotorenko\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gevgeny/angular2-highcharts.git"
  },
  "scripts": {
    "build": "rm -rf dist && ngc",
    "test": "karma start karma.conf.js",
    "watch": "ntsc -w"
  },
  "version": "0.4.3"
}
