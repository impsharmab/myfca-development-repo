var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Directive, ElementRef, Input, KeyValueDiffers } from '@angular/core';
import { Ng2HighchartsBase } from "./ng2-highcharts-base";
export var Ng2Highstocks = (function (_super) {
    __extends(Ng2Highstocks, _super);
    function Ng2Highstocks(ele, _differs) {
        _super.call(this, ele, _differs);
    }
    Ng2Highstocks.prototype.draw = function (opt /* HighchartsOptions */) {
        if (!opt) {
            console.log('No valid options...');
            console.log(opt);
            return;
        }
        if (opt.series || opt.data) {
            if (this.pChart) {
                this.pChart.destroy();
            }
            if (!opt.chart) {
                opt.chart = {};
            }
            opt.chart.renderTo = this.hostElement.nativeElement;
            this.pChart = new window.Highcharts.StockChart(opt);
        }
        else {
            console.log('No valid options...');
            console.dir(opt);
        }
    };
    Ng2Highstocks.decorators = [
        { type: Directive, args: [{
                    selector: '[ng2-highstocks]'
                },] },
    ];
    /** @nocollapse */
    Ng2Highstocks.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: KeyValueDiffers, },
    ]; };
    Ng2Highstocks.propDecorators = {
        'options': [{ type: Input, args: ['ng2-highstocks',] },],
    };
    return Ng2Highstocks;
}(Ng2HighchartsBase));
